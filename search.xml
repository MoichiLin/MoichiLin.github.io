<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Clash&amp;Rules Providers</title>
      <link href="/posts/2023/01/30/Clash-Rules-Providers/"/>
      <url>/posts/2023/01/30/Clash-Rules-Providers/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Clash规则及格式如何写以及一些基本的刚需规则</p><span id="more"></span><h1 id="安装Clash-Premium"><a href="#安装Clash-Premium" class="headerlink" title="安装Clash Premium"></a>安装Clash Premium</h1><pre><code class="Bash">yay -S clash-premium-bin</code></pre><h1 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h1><details><summary>设置以及开启一些基本功能</summary><pre><code class="Bash">port: 7890socks-port: 7891# Transparent proxy server port for Linux and macOS (Redirect TCP and TProxy UDP)# redir-port: 7892# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)tproxy-port: 7893# HTTP(S) and SOCKS4(A)/SOCKS5 server on the same portmixed-port: 7894allow-lan: truemode: Rulelog-level: infoexternal-controller: 127.0.0.1:9090dns:  enable: true  listen: 0.0.0.0:53  enhanced-mode: fake-ip  nameserver:    - 8.8.8.8    - 114.114.114.114  fallback:    - 8.8.8.8tun:  enable: true  stack: system # 或 gvisor  dns-hijack:    - any:53    - tcp://any:53  auto-route: true # auto set global route  auto-detect-interface: true # conflict with interface-namecfw-bypass:  - qq.com  - music.163.com  - "*.music.126.net"  - localhost  - 127.*  - 10.*  - 172.16.*  - 172.17.*  - 172.18.*  - 172.19.*  - 172.20.*  - 172.21.*  - 172.22.*  - 172.23.*  - 172.24.*  - 172.25.*  - 172.26.*  - 172.27.*  - 172.28.*  - 172.29.*  - 172.30.*  - 172.31.*  - 192.168.*  - &lt;local&gt;cfw-latency-timeout: 5000</code></pre></details><h1 id="节点设置"><a href="#节点设置" class="headerlink" title="节点设置"></a>节点设置</h1><details><summary>设置基本的节点和分组</summary><pre><code class="Bash">proxies:这里覆盖上你所有的节点配置proxy-groups:  - name: 🌏 MAIN    type: select    proxies:      - 你的最佳的几个节点  - name: 💠 AllInOne    type: select    proxies:      - 🌏 MAIN      - 🔰 机场1      - 🔰 机场2      - 🔰 机场3      - DIRECT  - name: 🧱 GFW    type: select    proxies:      - 💠 AllInOne      - 常用节点  - name: 📯 Telegram    type: select    proxies:      - 💠 AllInOne      - 常用节点  - name: 🇨🇳 Tld-Not-CN    type: select    proxies:      - 💠 AllInOne      - 常用节点  - name: 🌀 Google    type: select    proxies:      - 💠 AllInOne      - 常用节点  - name: 🎥 Stream    type: select    proxies:      - 🔰 机场1      - 🔰 机场2      - 🔰 机场3      - DIRECT  - name: 🔰 机场1    type: select    proxies:      - 节点  - name: 🔰 机场2    type: select    proxies:      - 节点  - name: 🔰 机场3    type: select    proxies:      - 节点  - name: 🐟 MIS    type: select    proxies:      - DIRECT      - 🔰 机场1      - 🔰 机场2      - 🔰 机场3  - name: 🎮 Steam-Download    type: select    proxies:      - DIRECT      - 🔰 机场1      - 🔰 机场2      - 🔰 机场3  - name: 🇨🇳 China    type: select    proxies:      - DIRECT      - 🔰 机场1      - 🔰 机场2      - 🔰 机场3</code></pre></details><h1 id="设置规则提供列表"><a href="#设置规则提供列表" class="headerlink" title="设置规则提供列表"></a>设置规则提供列表</h1><details><summary>rule-providers加到groups后面</summary><pre><code class="Bash">rule-providers:  reject:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt"    path: ./ruleset/reject.yaml    interval: 86400  icloud:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt"    path: ./ruleset/icloud.yaml    interval: 86400  apple:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt"    path: ./ruleset/apple.yaml    interval: 86400  google:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt"    path: ./ruleset/google.yaml    interval: 86400  proxy:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt"    path: ./ruleset/proxy.yaml    interval: 86400  direct:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt"    path: ./ruleset/direct.yaml    interval: 86400  private:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt"    path: ./ruleset/private.yaml    interval: 86400  gfw:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt"    path: ./ruleset/gfw.yaml    interval: 86400  greatfire:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/greatfire.txt"    path: ./ruleset/greatfire.yaml    interval: 86400  tld-not-cn:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt"    path: ./ruleset/tld-not-cn.yaml    interval: 86400  telegramcidr:    type: http    behavior: ipcidr    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt"    path: ./ruleset/telegramcidr.yaml    interval: 86400  cncidr:    type: http    behavior: ipcidr    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt"    path: ./ruleset/cncidr.yaml    interval: 86400  lancidr:    type: http    behavior: ipcidr    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt"    path: ./ruleset/lancidr.yaml    interval: 86400  applications:    type: http    behavior: classical    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt"    path: ./ruleset/applications.yaml    interval: 86400</code></pre></details><h1 id="手动加入一些常用的规则"><a href="#手动加入一些常用的规则" class="headerlink" title="手动加入一些常用的规则"></a>手动加入一些常用的规则</h1><h2 id="rule-providers需要指定分流"><a href="#rule-providers需要指定分流" class="headerlink" title="rule-providers需要指定分流"></a>rule-providers需要指定分流</h2><details><summary>rules加到rule-providers后面</summary><pre><code class="Bash">rules: - DOMAIN,clash.razord.top,DIRECT - DOMAIN,yacd.haishan.me,DIRECT - RULE-SET,applications,DIRECT - RULE-SET,private,DIRECT - RULE-SET,reject,REJECT - RULE-SET,icloud,DIRECT - RULE-SET,apple,DIRECT - RULE-SET,google,🌀 Google - RULE-SET,proxy,💠 AllInOne - RULE-SET,gfw,🧱 GFW - RULE-SET,greatfire,🧱 GFW - RULE-SET,tld-not-cn,🇨🇳 Tld-Not-CN - RULE-SET,direct,DIRECT - RULE-SET,lancidr,DIRECT - RULE-SET,cncidr,DIRECT - RULE-SET,telegramcidr,📯 Telegram - MATCH,🐟 MIS</code></pre></details><h2 id="steam下载走国内服务器"><a href="#steam下载走国内服务器" class="headerlink" title="steam下载走国内服务器"></a>steam下载走国内服务器</h2><details><summary>加到rules里面</summary><pre><code class="Bash"> - DOMAIN-SUFFIX,steamgames.com,DIRECT - DOMAIN-SUFFIX,steamcontent.com,🎮 Steam-Download - DOMAIN-SUFFIX,steampipe.steamcontent.tnkjmec.com,🎮 Steam-Download - DOMAIN-SUFFIX,st.dl.eccdnx.com,🎮 Steam-Download - DOMAIN-SUFFIX,st.dl.bscstorage.net,🎮 Steam-Download - DOMAIN-SUFFIX,st.dl.pinyuncloud.com,🎮 Steam-Download - DOMAIN-SUFFIX,dl.steam.clngaa.com,🎮 Steam-Download - DOMAIN-SUFFIX,cdn.mileweb.cs.steampowered.com.8686c.com,🎮 Steam-Download - DOMAIN-SUFFIX,xz.pphimalayanrt.com,🎮 Steam-Download - DOMAIN-SUFFIX,edge.steam-dns.top.comcast.net,🎮 Steam-Download - DOMAIN-SUFFIX,edgecast.cdn.steampipe.steamcontent.com,🎮 Steam-Download - DOMAIN-SUFFIX,google.cdn.steampipe.steamcontent.com,🎮 Steam-Download - DOMAIN-SUFFIX,google2.cdn.steampipe.steamcontent.com,🎮 Steam-Download - DOMAIN-SUFFIX,level3.cdn.steampipe.steamcontent.com,🎮 Steam-Download - DOMAIN-SUFFIX,steam.eca.qtlglb.com,🎮 Steam-Download - DOMAIN-SUFFIX,steam.naeu.qtlglb.com,🎮 Steam-Download - DOMAIN-SUFFIX,steam.ru.qtlglb.com,🎮 Steam-Download - DOMAIN-SUFFIX,steam.apac.qtlglb.com,🎮 Steam-Download - DOMAIN-SUFFIX,steampipe-kr.akamaized.net,🎮 Steam-Download - DOMAIN-SUFFIX,steampipe-partner.akamaized.net,🎮 Steam-Download - DOMAIN-SUFFIX,steampipe.akamaized.net,🎮 Steam-Download - DOMAIN-SUFFIX,f3b7q2p3.ssl.hwcdn.net,🎮 Steam-Download - DOMAIN-SUFFIX,telus.cdn.steampipe.steamcontent.com,🎮 Steam-Download - DOMAIN-SUFFIX,steam.cdn.on.net,🎮 Steam-Download - DOMAIN-SUFFIX,steam.cdn.orcon.net.nz,🎮 Steam-Download - DOMAIN-SUFFIX,steam.cdn.slingshot.co.nz,🎮 Steam-Download - DOMAIN-SUFFIX,steam.cdn.webra.ru,🎮 Steam-Download</code></pre></details><h1 id="总体模板"><a href="#总体模板" class="headerlink" title="总体模板"></a>总体模板</h1><details><summary>换上自己的节点即可</summary><pre><code class="Bash">port: 7890socks-port: 7891# Transparent proxy server port for Linux and macOS (Redirect TCP and TProxy UDP)# redir-port: 7892# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)tproxy-port: 7893# HTTP(S) and SOCKS4(A)/SOCKS5 server on the same portmixed-port: 7894allow-lan: truemode: Rulelog-level: infoexternal-controller: 127.0.0.1:9090dns:  enable: true  listen: 0.0.0.0:53  enhanced-mode: fake-ip  nameserver:    - 8.8.8.8    - 114.114.114.114  fallback:    - 8.8.8.8tun:  enable: true  stack: system # 或 gvisor  dns-hijack:    - any:53    - tcp://any:53  auto-route: true # auto set global route  auto-detect-interface: true # conflict with interface-namecfw-bypass:  - qq.com  - music.163.com  - "*.music.126.net"  - localhost  - 127.*  - 10.*  - 172.16.*  - 172.17.*  - 172.18.*  - 172.19.*  - 172.20.*  - 172.21.*  - 172.22.*  - 172.23.*  - 172.24.*  - 172.25.*  - 172.26.*  - 172.27.*  - 172.28.*  - 172.29.*  - 172.30.*  - 172.31.*  - 192.168.*  - &lt;local&gt;cfw-latency-timeout: 5000proxies:这里覆盖上你的节点配置proxy-groups:  - name: 🌏 MAIN    type: select    proxies:      - 你的最佳的几个节点  - name: 💠 AllInOne    type: select    proxies:      - 🌏 MAIN      - 🔰 机场1      - 🔰 机场2      - 🔰 机场3      - DIRECT  - name: 🧱 GFW    type: select    proxies:      - 💠 AllInOne      - 常用节点  - name: 📯 Telegram    type: select    proxies:      - 💠 AllInOne      - 常用节点  - name: 🇨🇳 Tld-Not-CN    type: select    proxies:      - 💠 AllInOne      - 常用节点  - name: 🌀 Google    type: select    proxies:      - 💠 AllInOne      - 常用节点  - name: 🎥 Stream    type: select    proxies:      - 🔰 机场1      - 🔰 机场2      - 🔰 机场3      - DIRECT  - name: 🔰 机场1    type: select    proxies:      - 节点  - name: 🔰 机场2    type: select    proxies:      - 节点  - name: 🔰 机场3    type: select    proxies:      - 节点  - name: 🐟 MIS    type: select    proxies:      - DIRECT      - 🔰 机场1      - 🔰 机场2      - 🔰 机场3  - name: 🎮 Steam-Download    type: select    proxies:      - DIRECT      - 你的众多常用节点  - name: 🇨🇳 China    type: select    proxies:      - DIRECT      - 🔰 机场1      - 🔰 机场2      - 🔰 机场3rule-providers:  reject:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt"    path: ./ruleset/reject.yaml    interval: 86400  icloud:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt"    path: ./ruleset/icloud.yaml    interval: 86400  apple:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt"    path: ./ruleset/apple.yaml    interval: 86400  google:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt"    path: ./ruleset/google.yaml    interval: 86400  proxy:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt"    path: ./ruleset/proxy.yaml    interval: 86400  direct:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt"    path: ./ruleset/direct.yaml    interval: 86400  private:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt"    path: ./ruleset/private.yaml    interval: 86400  gfw:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt"    path: ./ruleset/gfw.yaml    interval: 86400  greatfire:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/greatfire.txt"    path: ./ruleset/greatfire.yaml    interval: 86400  tld-not-cn:    type: http    behavior: domain    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt"    path: ./ruleset/tld-not-cn.yaml    interval: 86400  telegramcidr:    type: http    behavior: ipcidr    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt"    path: ./ruleset/telegramcidr.yaml    interval: 86400  cncidr:    type: http    behavior: ipcidr    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt"    path: ./ruleset/cncidr.yaml    interval: 86400  lancidr:    type: http    behavior: ipcidr    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt"    path: ./ruleset/lancidr.yaml    interval: 86400  applications:    type: http    behavior: classical    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt"    path: ./ruleset/applications.yaml    interval: 86400rules: - DOMAIN-SUFFIX,live-video.net,🎥 Stream - DOMAIN-SUFFIX,steamgames.com,DIRECT - DOMAIN-SUFFIX,steamcontent.com,🎮 Steam-Download - DOMAIN-SUFFIX,steampipe.steamcontent.tnkjmec.com,🎮 Steam-Download - DOMAIN-SUFFIX,st.dl.eccdnx.com,🎮 Steam-Download - DOMAIN-SUFFIX,st.dl.bscstorage.net,🎮 Steam-Download - DOMAIN-SUFFIX,st.dl.pinyuncloud.com,🎮 Steam-Download - DOMAIN-SUFFIX,dl.steam.clngaa.com,🎮 Steam-Download - DOMAIN-SUFFIX,cdn.mileweb.cs.steampowered.com.8686c.com,🎮 Steam-Download - DOMAIN-SUFFIX,xz.pphimalayanrt.com,🎮 Steam-Download - DOMAIN-SUFFIX,edge.steam-dns.top.comcast.net,🎮 Steam-Download - DOMAIN-SUFFIX,edgecast.cdn.steampipe.steamcontent.com,🎮 Steam-Download - DOMAIN-SUFFIX,google.cdn.steampipe.steamcontent.com,🎮 Steam-Download - DOMAIN-SUFFIX,google2.cdn.steampipe.steamcontent.com,🎮 Steam-Download - DOMAIN-SUFFIX,level3.cdn.steampipe.steamcontent.com,🎮 Steam-Download - DOMAIN-SUFFIX,steam.eca.qtlglb.com,🎮 Steam-Download - DOMAIN-SUFFIX,steam.naeu.qtlglb.com,🎮 Steam-Download - DOMAIN-SUFFIX,steam.ru.qtlglb.com,🎮 Steam-Download - DOMAIN-SUFFIX,steam.apac.qtlglb.com,🎮 Steam-Download - DOMAIN-SUFFIX,steampipe-kr.akamaized.net,🎮 Steam-Download - DOMAIN-SUFFIX,steampipe-partner.akamaized.net,🎮 Steam-Download - DOMAIN-SUFFIX,steampipe.akamaized.net,🎮 Steam-Download - DOMAIN-SUFFIX,f3b7q2p3.ssl.hwcdn.net,🎮 Steam-Download - DOMAIN-SUFFIX,telus.cdn.steampipe.steamcontent.com,🎮 Steam-Download - DOMAIN-SUFFIX,steam.cdn.on.net,🎮 Steam-Download - DOMAIN-SUFFIX,steam.cdn.orcon.net.nz,🎮 Steam-Download - DOMAIN-SUFFIX,steam.cdn.slingshot.co.nz,🎮 Steam-Download - DOMAIN-SUFFIX,steam.cdn.webra.ru,🎮 Steam-Download - DOMAIN,clash.razord.top,DIRECT - DOMAIN,yacd.haishan.me,DIRECT - RULE-SET,applications,DIRECT - RULE-SET,private,DIRECT - RULE-SET,reject,REJECT - RULE-SET,icloud,DIRECT - RULE-SET,apple,DIRECT - RULE-SET,google,🌀 Google - RULE-SET,proxy,💠 AllInOne - RULE-SET,gfw,🧱 GFW - RULE-SET,greatfire,🧱 GFW - RULE-SET,tld-not-cn,🇨🇳 Tld-Not-CN - RULE-SET,direct,DIRECT - RULE-SET,lancidr,DIRECT - RULE-SET,cncidr,DIRECT - RULE-SET,telegramcidr,📯 Telegram - MATCH,🐟 MIS</code></pre></details>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clash </tag>
            
            <tag> proxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Protonhax</title>
      <link href="/posts/2023/01/30/Protonhax/"/>
      <url>/posts/2023/01/30/Protonhax/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使软件运行在与游戏运行相同的proton容器下，比如游戏修改器<br><a href="https://github.com/aoleg94/protonhax">github项目地址</a></p><span id="more"></span><h1 id="安装protonhax"><a href="#安装protonhax" class="headerlink" title="安装protonhax"></a>安装protonhax</h1><p>Arch Linux从aur安装</p><pre><code class="Bash">yay -S protonhax</code></pre><h1 id="设置启动项"><a href="#设置启动项" class="headerlink" title="设置启动项"></a>设置启动项</h1><p>右键你的steam游戏<br>在launch option里加入</p><pre><code class="Bash">protonhax init %COMMAND%</code></pre><p>如果你用prime-run，加在前面就行</p><h1 id="运行方式"><a href="#运行方式" class="headerlink" title="运行方式"></a>运行方式</h1><h2 id="找到你运行的游戏ID"><a href="#找到你运行的游戏ID" class="headerlink" title="找到你运行的游戏ID"></a>找到你运行的游戏ID</h2><pre><code class="Bash">protonhax ls</code></pre><blockquote><p>如我运行Dishonored 2，则是403640</p></blockquote><h2 id="在游戏的同一容器内运行程序"><a href="#在游戏的同一容器内运行程序" class="headerlink" title="在游戏的同一容器内运行程序"></a>在游戏的同一容器内运行程序</h2><pre><code class="Bash">protonhax run &lt;gameid&gt; &lt;path/program&gt;</code></pre><blockquote><p>如我需要运行Dishonored 2修改器，则是<code>protonhax run 403640 &lt;修改器路径&gt;</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> arch </tag>
            
            <tag> proton </tag>
            
            <tag> wine </tag>
            
            <tag> steam </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arch Compile Env</title>
      <link href="/posts/2023/01/30/Arch-Compile-Env/"/>
      <url>/posts/2023/01/30/Arch-Compile-Env/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Arch Linux编译Android rom的环境</p><span id="more"></span><h1 id="环境包准备"><a href="#环境包准备" class="headerlink" title="环境包准备"></a>环境包准备</h1><p>首先，我们得用bash, 像zsh这样的会在out过程出错，只推荐在编译时至少用bash<br>先声明自己</p><pre><code class="Bash">git config --global user.name "$urusername"git config --global user.email "$urmailaddr"</code></pre><p>其次，安装需要的基本的包</p><pre><code class="Bash">yay -S base-devel multilib-devel gcc repo git gnupg gperf sdl wxwidgets-common wxwidgets-gtk2 squashfs-tools curl ncurses zlib schedtool perl-switch zip unzip libxslt bc rsync ccache lib32-zlib lib32-ncurses lib32-readline ncurses5-compat-libs lib32-ncurses5-compat-libs ttf-dejavu lib32-gcc-libs flex bison  xml2 lzop pngcrush imagemagick lineageos-devel aosp-devel libxcrypt-compat</code></pre><h1 id="MIX3-Devices-Trees"><a href="#MIX3-Devices-Trees" class="headerlink" title="MIX3 Devices Trees"></a>MIX3 Devices Trees</h1><h2 id="Lineage-based"><a href="#Lineage-based" class="headerlink" title="Lineage-based"></a>Lineage-based</h2><pre><code class="Bash">git clone https://github.com/LineageOS/android_device_xiaomi_perseus.git -b lineage-20 device/xiaomi/perseusgit clone https://github.com/LineageOS/android_device_xiaomi_sdm845-common.git -b lineage-20  device/xiaomi/sdm845-commongit clone https://github.com/LineageOS/android_kernel_xiaomi_sdm845.git -b lineage-20 kernel/xiaomi/sdm845git clone https://github.com/LineageOS/android_hardware_xiaomi.git -b lineage-20 hardware/xiaomigit clone https://gitlab.com/the-muppets/proprietary_vendor_xiaomi.git vendor/xiaomi</code></pre><h2 id="My-Edited-Trees"><a href="#My-Edited-Trees" class="headerlink" title="My Edited Trees"></a>My Edited Trees</h2><pre><code class="Bash">git clone https://github.com/MoichiLin/android_device_xiaomi_perseus.git device/xiaomi/perseusgit clone https://github.com/MoichiLin/android_device_xiaomi_sdm845-common.git  device/xiaomi/sdm845-commongit clone https://github.com/MoichiLin/android_kernel_xiaomi_sdm845.git kernel/xiaomi/sdm845git clone https://github.com/MoichiLin/proprietary_vendor_xiaomi_perseus.git vendor/xiaomi</code></pre>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> arch </tag>
            
            <tag> compile </tag>
            
            <tag> building </tag>
            
            <tag> rom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wayfire&amp;Awesome</title>
      <link href="/posts/2023/01/24/Wayfire-Awesome/"/>
      <url>/posts/2023/01/24/Wayfire-Awesome/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>详细编写了wayfire和awesome的安装以及使用<br>包含有一系列的基础和必要软件的安装和使用方法，以及一些重要服务的配置<br><img src="https://pic.imgdb.cn/item/63d58045face21e9ef3ebc4a.png" alt="Wayfire" title="Wayfire" loading="lazy"></p><span id="more"></span><h1 id="Wayfire"><a href="#Wayfire" class="headerlink" title="Wayfire"></a>Wayfire</h1><p><code>Wayfire is a wayland compositor based on wlroots. It aims to create a customizable, extendable and lightweight environment without sacrificing its appearance.</code><br><code>Wayfire是一个基于wlroots的wayland合成器。它旨在创建一个可定制的、可扩展的、轻量级的环境，且不牺牲其外观。</code><br>官网 <a href="https://wayfire.org/">Wayfire</a><br>Github <a href="https://github.com/WayfireWM/wayfire">Wayfire</a></p><hr><div class="admonition note"><p class="admonition-title">我的dotfiles文件(github)</p><p><a href="https://github.com/MoichiLin">我的dotfiles</a></p></div><hr><h2 id="连网"><a href="#连网" class="headerlink" title="连网"></a>连网</h2><pre><code class="Bash">sudo systemctl enable --now NetworkManagernmcli dev wifi listnmcli dev wifi connect $WIFI-SSID password $WIFI-PASSWDnmcli dev wifi connect $WIFI-SSID password $WIFI-PASSWD hidden yes #连接隐藏wifi</code></pre><hr><h2 id="开启-32-位支持库"><a href="#开启-32-位支持库" class="headerlink" title="开启 32 位支持库"></a>开启 32 位支持库</h2><div class="admonition todo"><p class="admonition-title">编译pacman.conf</p><p>去掉 <code>[multilib]</code> 一节中两行的注释，来开启 32 位库支持。</p><pre><code class="language-Bash">sudo vim /etc/pacman.conf</code></pre></div><hr><h2 id="安装-yay"><a href="#安装-yay" class="headerlink" title="安装 yay"></a>安装 yay</h2><pre><code class="Bash">wget https://arch.moichi.cn/res/yay-bin.pkg.tar.zstsudo pacman -U yay-bin.pkg.tar.zst</code></pre><hr><h2 id="安装Wayfire"><a href="#安装Wayfire" class="headerlink" title="安装Wayfire"></a>安装Wayfire</h2><div class="admonition error"><p class="admonition-title">注意wayfire与wayfire-git的不同情况下的选择</p><pre><code class="language-Bash">yay -S wayfireyay -S wayfire-lily-git    #archlinuxcn 依云yay -S polkit</code></pre></div><hr><h2 id="安装必要软件"><a href="#安装必要软件" class="headerlink" title="安装必要软件"></a>安装必要软件</h2><pre><code class="Bash">yay -S qt6-waylandyay -S qt5-waylandyay -S xorg-xwayland                                                   #xwaylandsudo pacman -S ntfs-3g                                                 #识别NTFS格式的硬盘sudo pacman -S adobe-source-han-serif-cn-fonts wqy-zenhei              #安装几个开源中文字体 一般装上文泉驿就能解决大多wine应用中文方块的问题sudo pacman -S noto-fonts-cjk noto-fonts-emoji noto-fonts-extra        #安装谷歌开源字体及表情sudo pacman -S firefox                                                 #安装火狐浏览器sudo pacman -S ark p7zip unrar unarchiver lzop lrzip                   #解压工具sudo pacman -S git wget kate bind                                      #一些工具sudo pacman -S alsa-utils pipewire pipewire-alsa pipewire-jack wireplumber pipewire-pulse  #pipewire声音及音量控制sudo pacman -S alsa-utils pulseaudio pulseaudio-alsa pavucontrol pulseaudio-bluetooth      #pluse声音及音量控制sudo pacman -S brightnessctl      #屏幕背光控制yay -S wl-gammactl                #gamma,亮度,对比度sudo pacman -S bluez bluez-utils bluez-libs bluez-qt bluez-tools blueman bluedevil  #蓝牙</code></pre><hr><h2 id="一些刚需软件"><a href="#一些刚需软件" class="headerlink" title="一些刚需软件"></a>一些刚需软件</h2><pre><code class="Bash">sudo pacman -S fcitx5-im              #基础包组sudo pacman -S fcitx5-chinese-addons  #官方中文输入引擎sudo pacman -S fcitx5-material-color  #主题yay -S kitty python-pillow            #kitty 在wayland下支持ranger预览文件yay -S waybar                         #baryay -S wofi                           #wofi 作为一个程序检索和启动器yay -S ranger ttf-nerd-fonts-symbols-1000-em-mono highlight atool   #终端文件管理器yay -S swaylock                       #锁屏yay -S kanshi                         #屏幕yay -S wpaperd                        #壁纸。 可自动切换同路径下随机壁纸yay -S mpvpaper                       #视频壁纸yay -S thunar gvfs gvfs-mtp           #文件管理器yay -S thunar-archive-plugin file-rolleryay -S wl-clipboard                   #剪贴板yay -S wlogout                        #wlogout 可用来帐户登出，关机重启等操作yay -S grim slurp                     #截图yay -S mako                           #通知yay -S greetd greetd-tuigreet         #登录管理器</code></pre><hr><h2 id="其他软件"><a href="#其他软件" class="headerlink" title="其他软件"></a>其他软件</h2><pre><code class="Bash">yay -S v2raya-bin v2ray                           #v2rayayay -S clash-premium-bin                          #clashyay -S --noconfirm zsh-theme-powerlevel10k        #zsh主题yay -S chromium google-chrome gtk4 icalingua++    #chrome QQsudo pacman -S aria2                              #aria2服务sudo pacman -S mpv nomacs kate                    #视频播放 图片查看 文本编辑yay -S gamemode steam lutrisyay -S dxvk-bin vkd3d vkd3d-proton-bin            #dx9,10,11,12 to vulkanyay -S vbam-wx fceux melonds-bin citra-qt-bin ffmpeg4.4 yuzu-mainline-bin #GBA FC NDS 3DS SWITCH 模拟器yay -S mesen desmume-git                          #另可选FC和NDS模拟器 不推荐yay -S retroarch retroarch-assets-ozone retroarch-assets-xmb libretro-nestopia-git libretro-vba-next-git libretro-desmume-git  #retroarch 包含很多常见游戏平台的模拟器sudo pacman -S virtualbox virtualbox-host-dkms virtualbox-guest-iso  #virtualboxyay -S virtualbox-ext-oracleyay -S obs-studio wlrobs-hg                       #OBSsudo pacman -S refind                             #引导工具yay -S scrcpy                                     #投屏软件yay -S android-tools                              #adb工具yay -S genymotion                                 #安卓环境基于vbox,建议添加arm_translation以支持arm转换</code></pre><div class="admonition note"><p class="admonition-title">arm转译包</p><p><a href="https://github.com/m9rco/Genymotion_ARM_Translation">arm_translation</a></p></div><hr><h2 id="显卡驱动"><a href="#显卡驱动" class="headerlink" title="显卡驱动"></a>显卡驱动</h2><h3 id="英特尔核芯显卡"><a href="#英特尔核芯显卡" class="headerlink" title="英特尔核芯显卡"></a>英特尔核芯显卡</h3><pre><code class="Bash">sudo pacman -S mesa lib32-mesa vulkan-intel lib32-vulkan-intel</code></pre><h3 id="Nvidia显卡驱动"><a href="#Nvidia显卡驱动" class="headerlink" title="Nvidia显卡驱动"></a>Nvidia显卡驱动</h3><pre><code class="Bash">sudo pacman -S nvidia-settings nvidia-utils lib32-nvidia-utils nvidia-dkms nvidia-prime opencl-nvidia lib32-opencl-nvidia vulkan-headers vulkan-intel lib32-vulkan-intel vulkan-icd-loader lib32-vulkan-icd-loader cuda</code></pre><pre><code class="Bash">yay -S libva libva-intel-driver libva-mesa-driver libva-nvidia-driver libva-utils</code></pre><pre><code class="Bash">yay -S libva-vdpau-driver-wayland #与libva-nvidia-driver冲突</code></pre><h3 id="设置早期KMS启动并启用DRM"><a href="#设置早期KMS启动并启用DRM" class="headerlink" title="设置早期KMS启动并启用DRM"></a>设置早期KMS启动并启用DRM</h3><h4 id="添加内核参数"><a href="#添加内核参数" class="headerlink" title="添加内核参数"></a>添加内核参数</h4><p>修改 <code>/etc/default/grub</code> 找到 GRUB_CMDLINE_LINUX_DEFAULT这一项在后面加入 nvidia-drm.modeset=1</p><pre><code class="Bash">GRUB_CMDLINE_LINUX_DEFAULT="xxxx nvidia-drm.modeset=1”</code></pre><p>更改完成后执行，下面命令，会重新生成grub.cfg。</p><pre><code class="Bash">sudo grub-mkconfig -o /boot/grub/grub.cfg</code></pre><h4 id="添加-initramfs-模块"><a href="#添加-initramfs-模块" class="headerlink" title="添加 initramfs 模块"></a>添加 initramfs 模块</h4><p>在 <code>/etc/mkinitcpio.conf</code> 中找到 MODULES=这一行在括号的后面加入intel_agp i915 nvidia nvidia_modeset nvidia_uvm  nvidia_drm。</p><pre><code class="Bash">MODULES=(intel_agp i915 nvidia nvidia_modeset nvidia_uvm nvidia_drm)</code></pre><p>别忘了重新生成一下 initramfs 执行</p><pre><code class="Bash">sudo mkinitcpio -P</code></pre><h3 id="创建nvidia-hook"><a href="#创建nvidia-hook" class="headerlink" title="创建nvidia hook"></a>创建nvidia hook</h3><p>创建<code>/etc/pacman.d/hooks/nvidia.hook</code> 内容为</p><pre><code class="Bash">[Trigger]Operation=InstallOperation=UpgradeOperation=RemoveType=PackageTarget=nvidia-dkmsTarget=linux-zen# Change the linux part above and in the Exec line if a different kernel is used[Action]Description=Update Nvidia module in initcpioDepends=mkinitcpioWhen=PostTransactionNeedsTargetsExec=/bin/sh -c 'while read -r trg; do case $trg in linux) exit 0; esac; done; /usr/bin/mkinitcpio -P'</code></pre><h3 id="添加全局变量调用nvidia"><a href="#添加全局变量调用nvidia" class="headerlink" title="添加全局变量调用nvidia"></a>添加全局变量调用nvidia</h3><pre><code class="Bash">sudo vim /etc/environment</code></pre><pre><code class="Bash">__NV_PRIME_RENDER_OFFLOAD=1__GLX_VENDOR_LIBRARY_NAME="nvidia"__VK_LAYER_NV_optimus="NVIDIA_only"</code></pre><h2 id="各软件的配置"><a href="#各软件的配置" class="headerlink" title="各软件的配置"></a>各软件的配置</h2><h3 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h3><div class="admonition todo"><p class="admonition-title">编辑environment</p><p>在 <code>/etc/environment</code> 加入以下内容</p><pre><code class="language-Bash">GTK_IM_MODULE=fcitxQT_IM_MODULE=fcitxXMODIFIERS=@im=fcitxSDL_IM_MODULE=fcitxINPUT_METHOD=fcitxGLFW_IM_MODULE=ibus</code></pre></div><h3 id="greetd配置"><a href="#greetd配置" class="headerlink" title="greetd配置"></a>greetd配置</h3><div class="admonition todo"><p class="admonition-title">编缉 `/etc/greetd/config.toml`</p><pre><code class="language-Bash">[default_session]command = "tuigreet --cmd wayfire"user = "$USER"</code></pre></div><h3 id="kitty配置"><a href="#kitty配置" class="headerlink" title="kitty配置"></a>kitty配置</h3><pre><code class="Bash">cd ~/.config/kittyln -s ./kitty-themes/themes/Material.conf ~/.config/kitty/theme.conf</code></pre><div class="admonition todo"><p class="admonition-title">在 `kitty.conf` 里添加内容</p><pre><code class="language-Bash">include ./theme.conf</code></pre></div><h3 id="ranger配置"><a href="#ranger配置" class="headerlink" title="ranger配置"></a>ranger配置</h3><pre><code class="Bash">git clone https://github.com/alexanderjeurissen/ranger_devicons ~/.config/ranger/plugins/ranger_deviconsecho "default_linemode devicons" &gt;&gt; $HOME/.config/ranger/rc.conf</code></pre><h3 id="wpaperd配置"><a href="#wpaperd配置" class="headerlink" title="wpaperd配置"></a>wpaperd配置</h3><div class="admonition todo"><p class="admonition-title">定时自动切换壁纸</p><p>wpaperd可以针对不同屏幕设置不同的壁纸以及不同定时的自动切换壁纸以下为2块屏幕的相同定时时读取同一路径下随机壁纸的例子</p><pre><code class="language-Bash">[eDP-1]path = "～/wallpaper/"apply-shadow = trueduration = "6m"[HDMI-A-1]path = "～/wallpaper/"apply-shadow = trueduration = "6m"</code></pre></div><h3 id="zsh主题-powerlevel10k"><a href="#zsh主题-powerlevel10k" class="headerlink" title="zsh主题-powerlevel10k"></a>zsh主题-powerlevel10k</h3><pre><code class="Bash">echo 'source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme' &gt;&gt; ~/.zshrc</code></pre><h3 id="vbox配置"><a href="#vbox配置" class="headerlink" title="vbox配置"></a>vbox配置</h3><pre><code class="Bash">sudo usermod -a -G vboxusers $USER</code></pre><h3 id="refind配置"><a href="#refind配置" class="headerlink" title="refind配置"></a>refind配置</h3><pre><code class="Bash">refind-install                      #安装refindsudo cp -r $theme /efi/EFI/refind/  #复制主题 推荐rEFInd-minimalsudo suecho 'include themes/rEFInd-minimal/theme.conf' &gt;&gt; /efi/EFI/refind/refind.conf  #应用主题</code></pre><h3 id="aria2配置"><a href="#aria2配置" class="headerlink" title="aria2配置"></a>aria2配置</h3><div class="admonition todo"><p class="admonition-title">编辑 aria2.service</p><pre><code class="language-Bash">sudo vim /etc/systemd/user/aria2.service</code></pre><pre><code class="language-Bash">[Unit]Description=Aria2 Daemon[Service]ExecStart=/usr/bin/aria2c --conf-path=/home/$username/.config/aria2/aria2.config[Install]WantedBy=default.target</code><p><code class="language-Bash"></code></p></pre><p></p><pre><code class="language-Bash">touch ~/.config/aria2/aria2.sessionvim ~/.config/aria2/aria2.configsystemctl --user enable --now aria2  #非root服务自启</code></pre><blockquote><p>config可以在网上找一份，也可以改一改我的</p></blockquote></div><h3 id="V2raya"><a href="#V2raya" class="headerlink" title="V2raya"></a>V2raya</h3><pre><code class="Bash">yay -S v2raya-bin v2raysudo systemctl enable --now v2raya  #服务自启Dashboard: 127.0.0.1:2017</code></pre><h3 id="Clash"><a href="#Clash" class="headerlink" title="Clash"></a>Clash</h3><pre><code class="Bash">yay -S clash_permium_binstart with `clash`如果country.mmdb下载失败, 手动复制再配置自己的配置文件cp $Country.mmdb /home/$username/.config/clash/cp $ur_config.yaml /home/$username/.config/clash/</code></pre><div class="admonition note"><p class="admonition-title">clash依赖</p><p><a href="https://github.com/SukkaW/Koolshare-Clash/blob/master/koolclash/koolclash/config/Country.mmdb">Country.mmdb</a></p></div><h4 id="Clash-TUN-及分流配置"><a href="#Clash-TUN-及分流配置" class="headerlink" title="Clash TUN 及分流配置"></a>Clash TUN 及分流配置</h4><div class="admonition todo"><p class="admonition-title">开启流量转发</p><pre><code class="language-Bash">sysctl -w net.ipv4.ip_forward=1</code></pre></div><div class="admonition todo"><p class="admonition-title">53端口可能被占用，先关掉默认系统DNS端口</p><pre><code class="language-Bash">systemctl disable systemd-resolved</code></pre></div><div class="admonition todo"><p class="admonition-title">配置config.yaml</p><p><a href="https://github.com/MoichiLin/dotfiles/blob/main/clash/config.yaml">dotfile</a></p></div><div class="admonition todo"><p class="admonition-title">编辑 clash.service</p><pre><code class="language-Bash">sudo vim /etc/systemd/user/clash.service</code></pre><pre><code class="language-Bash">[Unit]Description=Clash daemon, A rule-based proxy in Go.After=network.target[Service]Type=simpleRestart=alwaysExecStart=/usr/bin/clash -d /home/$username/.config/clash[Install]WantedBy=default.target</code></pre><pre><code class="language-Bash">systemctl --user enable --now clash #服务自启</code><p><code class="language-Bash">Dashboard: <a href="https://clash.razord.top/">https://clash.razord.top/</a><br></code></p></pre><p></p></div><h3 id="yuzu配置"><a href="#yuzu配置" class="headerlink" title="yuzu配置"></a>yuzu配置</h3><div class="admonition todo"><p class="admonition-title">放置yuzu key</p><p>运行yuzu需要key把以下文件解压覆盖到<code>~/.local/share/yuzu/</code></p></div><div class="admonition note"><p class="admonition-title">key文件</p><p><a href="https://www.dropbox.com/s/zzmrx35emikqfn0/YUZU_KEY.rar?dl=0">YUZU_KEY</a></p></div><h3 id="Chromium-开启Google-Chrome同步"><a href="#Chromium-开启Google-Chrome同步" class="headerlink" title="Chromium 开启Google Chrome同步"></a>Chromium 开启Google Chrome同步</h3><div class="admonition error"><p class="admonition-title">其他文章</p><p><a href="https://nyac.at/posts/google-sync-in-chromium">外链</a></p></div><h3 id="Chrome-wayland-不建议"><a href="#Chrome-wayland-不建议" class="headerlink" title="Chrome wayland (不建议)"></a>Chrome wayland (不建议)</h3><div class="admonition info"><p class="admonition-title">让Chrome在wayland下运行</p><p>把 <code>--gtk-version=4</code> 添加到每一个Exec的未尾在chrome上打开chrome://flagsPreferred Ozone platform 换成 wayland以支持fcitx5在chrome在wayland下运行</p><pre><code class="language-Bash">sudo vim /usr/share/applications/google-chrome.desktop</code></pre></div><hr><h2 id="Waydroid-不推荐"><a href="#Waydroid-不推荐" class="headerlink" title="Waydroid (不推荐)"></a>Waydroid (不推荐)</h2><pre><code class="Bash">yay -S waydroid waydroid-imagesudo waydroid initsudo waydroid init -s GAPPS -fsystemctl start waydroid-container.servicewaydroid session startwaydroid show-full-uisudo mount --bind &lt;source&gt; ~/.local/share/waydroid/data/media/0/&lt;target&gt; #共享文件夹</code></pre><hr><h1 id="Awesome"><a href="#Awesome" class="headerlink" title="Awesome"></a>Awesome</h1><pre><code class="Bash">sudo pacman -S xorg-server xorg-xinit xtermyay -S awesome-git picom-git playerctl pamixer numlockxyay -S feh flameshot rofiecho "exec awesome" &gt; ~/.xinitrc</code></pre><div class="admonition error"><p class="admonition-title">启动awesome</p><p>启动时，需要在greetd里F2更改命令为<code>startx</code></p></div><div class="admonition todo"><p class="admonition-title">定时自动切换壁纸</p><p>先写一个sh让它开机时自动运行sh里就写上feh设置随机壁纸的循环<code>vim ~/wallpaper/readom.sh</code>6m自动切换一次</p><pre><code class="language-Bash">while true; dofeh --bg-fill --randomize --no-fehbg ~/wallpaper/*sleep 6mdone</code></pre></div>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> arch </tag>
            
            <tag> wayfire </tag>
            
            <tag> awesome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arch Linux 基础安装</title>
      <link href="/posts/2023/01/24/Arch-Linux-Install/"/>
      <url>/posts/2023/01/24/Arch-Linux-Install/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本篇皆在搭建好Arch的所有基础环境，不涉及DE和WM的安装<br><img src="https://pic.imgdb.cn/item/63d57e12face21e9ef3b7f19.png" alt="ArchHandBook" title="ArchLinux" loading="lazy"></p><span id="more"></span><h1 id="本文来源-ArchLinuxStudio"><a href="#本文来源-ArchLinuxStudio" class="headerlink" title="本文来源 ArchLinuxStudio"></a>本文来源 <a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/">ArchLinuxStudio</a></h1><h1 id="Arch-Linux-基础安装"><a href="#Arch-Linux-基础安装" class="headerlink" title="Arch Linux 基础安装"></a>Arch Linux 基础安装</h1><p>本节从安装最基础的无图形化 ArchLinux 系统开始。<a href="https://wiki.archlinux.org/index.php/Installation_guide">官方安装指南</a></p><h2 id="禁用-reflector"><a href="#禁用-reflector" class="headerlink" title="禁用 reflector"></a>禁用 reflector</h2><p>reflector 会为你选择速度合适的镜像源，但其结果并不准确，同时会清空配置文件中的内容，对于新人来讲并不适用，我们首先对其进行禁用。</p><pre><code class="Bash">systemctl stop reflector.service</code></pre><h2 id="再次确保是否为-UEFI-模式"><a href="#再次确保是否为-UEFI-模式" class="headerlink" title="再次确保是否为 UEFI 模式"></a>再次确保是否为 UEFI 模式</h2><pre><code class="Bash">ls /sys/firmware/efi/efivars</code></pre><h2 id="连接网络"><a href="#连接网络" class="headerlink" title="连接网络"></a>连接网络</h2><pre><code class="Bash">rfkill unblock wifi                       #解锁无线网卡iwctl                                     #执行iwctl命令，进入交互式命令行device list                               #列出设备名，比如无线网卡看到叫 wlan0station wlan0 scan                        #扫描网络station wlan0 get-networks                #列出网络 比如想连接YOUR-WIRELESS-NAME这个无线station wlan0 connect YOUR-WIRELESS-NAME  #进行连接 输入密码即可exit                                      #成功后exit退出</code></pre><h2 id="更新系统时钟"><a href="#更新系统时钟" class="headerlink" title="更新系统时钟"></a>更新系统时钟</h2><pre><code class="Bash">timedatectl set-ntp true        #将系统时间与网络时间进行同步timedatectl status              #检查服务状态</code></pre><h2 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h2><p>首先将磁盘转换为 gpt 类型</p><pre><code class="Bash">lsblk                           #显示分区情况 找到你想安装的磁盘名称parted /dev/nvme0n1             #执行parted，进入交互式命令行，进行磁盘类型变更(parted)mktable                 #输入mktableNew disk label type? gpt        #输入gpt 将磁盘类型转换为gpt 如磁盘有数据会警告，输入yes即可quit                            #最后quit退出parted命令行交互</code></pre><p>使用 cfdisk 命令对磁盘分区</p><pre><code class="Bash">cfdisk /dev/sdx                 #来执行分区操作,分配各个分区大小，类型fdisk -l                        #分区结束后， 复查磁盘情况</code></pre><h2 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h2><pre><code class="Bash">mkfs.ext4  /dev/nvme0n1p2       #格式化根目录和home目录的两个分区mkfs.vfat  /dev/nvme0n1p1       #格式化efi分区</code></pre><h2 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h2><p>在挂载时，挂载是有顺序的，先挂载根分区，再挂载 EFI 分区</p><pre><code class="Bash">mount /dev/nvme0n1p2  /mntmkdir /mnt/efi                  #创建efi目录mkdir /mnt/home                 #创建home目录mount /dev/nvme0n1p1 /mnt/efimount /dev/sda1 /mnt/home</code></pre><h2 id="镜像源的选择"><a href="#镜像源的选择" class="headerlink" title="镜像源的选择"></a>镜像源的选择</h2><p>编辑镜像源，删除所有中国源，将台湾，日本，新加坡的提前</p><pre><code class="Bash">vim /etc/pacman.d/mirrorlist</code></pre><h2 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h2><pre><code class="Bash">pacstrap /mnt base base-devel linux-zen linux-zen-headers linux-firmware    #base-devel在AUR包的安装是必须的pacstrap /mnt dhcpcd iwd vim bash-completion zsh networkmanager             #一个有线所需(iwd也需要dhcpcd) 一个无线所需 一个编辑器 一个补全工具</code></pre><h2 id="生成-fstab-文件"><a href="#生成-fstab-文件" class="headerlink" title="生成 fstab 文件"></a>生成 fstab 文件</h2><p>fstab 用来定义磁盘分区</p><pre><code class="Bash">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</code></pre><h2 id="change-root"><a href="#change-root" class="headerlink" title="change root"></a>change root</h2><pre><code class="Bash">arch-chroot /mnt</code></pre><h2 id="时区设置"><a href="#时区设置" class="headerlink" title="时区设置"></a>时区设置</h2><p>设置时区，在 /etc/localtime 下用/usr 中合适的时区创建符号连接。如下设置上海时区。</p><pre><code class="Bash">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code></pre><p>随后进行硬件时间设置，将当前的正确 UTC 时间写入硬件时间。</p><pre><code class="Bash">hwclock --systohc</code></pre><h2 id="设置-Locale-进行本地化"><a href="#设置-Locale-进行本地化" class="headerlink" title="设置 Locale 进行本地化"></a>设置 Locale 进行本地化</h2><pre><code class="Bash">vim /etc/locale.gen             #en_US.UTF-8 所在行以及 zh_CN.UTF-8 所在行的注释符号（#）locale-gen</code></pre><p>向 <code>/etc/locale.conf</code> 导入内容</p><pre><code class="Bash">echo 'LANG=en_US.UTF-8' &gt; /etc/locale.conf</code></pre><h2 id="设置主机名"><a href="#设置主机名" class="headerlink" title="设置主机名"></a>设置主机名</h2><pre><code class="Bash">vim /etc/hostname               #加入你想为主机取的主机名</code></pre><p>接下来在/etc/hosts设置与其匹配的条目。</p><pre><code class="Bash">vim /etc/hosts</code></pre><p>加入如下内容</p><pre><code class="Bash">127.0.0.1   localhost::1         localhost127.0.1.1   archname</code></pre><h2 id="为-root-用户设置密码"><a href="#为-root-用户设置密码" class="headerlink" title="为 root 用户设置密码"></a>为 root 用户设置密码</h2><pre><code class="Bash">passwd root</code></pre><h2 id="安装微码"><a href="#安装微码" class="headerlink" title="安装微码"></a>安装微码</h2><pre><code class="Bash">pacman -S intel-ucode           #Intelpacman -S amd-ucode             #AMD</code></pre><h2 id="安装引导程序"><a href="#安装引导程序" class="headerlink" title="安装引导程序"></a>安装引导程序</h2><pre><code class="Bash">pacman -S grub efibootmgr       #grub是启动引导器，efibootmgr被 grub 脚本用来将启动项写入 NVRAM。grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=GRUB</code></pre><p>接下来编辑/etc/default/grub 文件，去掉GRUB_CMDLINE_LINUX_DEFAULT一行中最后的 quiet 参数，同时把 log level 的数值从 3 改成 5。这样是为了后续如果出现系统错误，方便排错。同时在同一行加入 nowatchdog 参数，这可以显著提高开关机速度。</p><pre><code class="Bash">vim /etc/default/grub</code></pre><p>最后生成 GRUB 所需的配置文件</p><pre><code class="Bash">grub-mkconfig -o /boot/grub/grub.cfg</code></pre><h2 id="完成安装"><a href="#完成安装" class="headerlink" title="完成安装"></a>完成安装</h2><pre><code class="Bash">exit                           #退回安装环境umount -R  /mnt                #卸载新分区reboot                         #重启</code></pre><p>重启后，开启 dhcp 服务，即可连接网络</p><pre><code class="Bash">systemctl enable --now dhcpcd  #立即启动dhcp</code></pre><p>若为无线链接，则还需要启动 iwd 才可以使用 iwctl 连接网络</p><pre><code class="Bash">systemctl start iwd            #立即启动iwdiwctl                          #和之前的方式一样，连接无线网络</code></pre><h2 id="准备非-root-用户"><a href="#准备非-root-用户" class="headerlink" title="准备非 root 用户"></a>准备非 root 用户</h2><pre><code class="Bash">useradd -m -G wheel -s /bin/zsh testuser  #wheel附加组可sudo，以root用户执行命令 -m同时创建用户家目录</code></pre><p>设置新用户 testuser 的密码</p><pre><code class="Bash">passwd testuser</code></pre><p>编辑 sudoers 配置文件</p><pre><code class="Bash">EDITOR=vim visudo              #需要以 root 用户运行 visudo 命令</code></pre><p>找到下面这样的一行，把前面的注释符号 # 去掉，:wq 保存并退出即可。</p><pre><code class="Bash">#%wheel ALL=(ALL) ALL</code></pre>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> arch </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
