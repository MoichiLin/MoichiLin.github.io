<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Wayfire&amp;Awesome</title>
      <link href="/2023/01/24/Wayfire-Awesome/"/>
      <url>/2023/01/24/Wayfire-Awesome/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Wayfire"><a href="#Wayfire" class="headerlink" title="Wayfire"></a>Wayfire</h1><p><code>Wayfire is a wayland compositor based on wlroots. It aims to create a customizable, extendable and lightweight environment without sacrificing its appearance.</code><br><code>Wayfire是一个基于wlroots的wayland合成器。它旨在创建一个可定制的、可扩展的、轻量级的环境，且不牺牲其外观。</code><br>官网 <a href="https://wayfire.org/">Wayfire</a><br>Github <a href="https://github.com/WayfireWM/wayfire">Wayfire</a></p><hr><div class="admonition note"><p class="admonition-title">我的dotfiles文件(github)</p><p><a href="https://github.com/MoichiLin">我的dotfiles</a></p></div><hr><h2 id="连网"><a href="#连网" class="headerlink" title="连网"></a>连网</h2><pre><code class="Bash">sudo systemctl enable --now NetworkManagernmcli dev wifi listnmcli dev wifi connect $WIFI-SSID password $WIFI-PASSWDnmcli dev wifi connect $WIFI-SSID password $WIFI-PASSWD hidden yes #连接隐藏wifi</code></pre><hr><h2 id="0-开启-32-位支持库"><a href="#0-开启-32-位支持库" class="headerlink" title="0 开启 32 位支持库"></a>0 开启 32 位支持库</h2><div class="admonition todo"><p class="admonition-title">编译pacman.conf</p><p>去掉 <code>[multilib]</code> 一节中两行的注释，来开启 32 位库支持。</p><pre><code class="language-Bash">sudo vim /etc/pacman.conf</code></pre></div><hr><h2 id="1-安装-yay"><a href="#1-安装-yay" class="headerlink" title="1 安装 yay"></a>1 安装 yay</h2><pre><code class="Bash">wget https://arch.moichi.cn/res/yay-bin.pkg.tar.zstsudo pacman -U yay-bin.pkg.tar.zst</code></pre><hr><h2 id="2-安装Wayfire"><a href="#2-安装Wayfire" class="headerlink" title="2 安装Wayfire"></a>2 安装Wayfire</h2><div class="admonition error"><p class="admonition-title">注意wayfire与wayfire-git的不同情况下的选择</p><pre><code class="language-Bash">yay -S wayfireyay -S wayfire-lily-git    #archlinuxcn 依云yay -S polkit</code></pre></div><hr><h2 id="3-安装必要软件"><a href="#3-安装必要软件" class="headerlink" title="3 安装必要软件"></a>3 安装必要软件</h2><pre><code class="Bash">yay -S qt6-waylandyay -S qt5-waylandyay -S xorg-xwayland                                                   #xwaylandsudo pacman -S ntfs-3g                                                 #识别NTFS格式的硬盘sudo pacman -S adobe-source-han-serif-cn-fonts wqy-zenhei              #安装几个开源中文字体 一般装上文泉驿就能解决大多wine应用中文方块的问题sudo pacman -S noto-fonts-cjk noto-fonts-emoji noto-fonts-extra        #安装谷歌开源字体及表情sudo pacman -S firefox                                                 #安装火狐浏览器sudo pacman -S ark p7zip unrar unarchiver lzop lrzip                   #解压工具sudo pacman -S git wget kate bind                                      #一些工具sudo pacman -S alsa-utils pipewire pipewire-alsa pipewire-jack wireplumber pipewire-pulse     #pipewire声音及音量控制sudo pacman -S alsa-utils pulseaudio pulseaudio-alsa pavucontrol pulseaudio-bluetooth      #pluse声音及音量控制sudo pacman -S brightnessctl      #屏幕背光控制yay -S wl-gammactl                #gamma,亮度,对比度sudo pacman -S bluez bluez-utils bluez-libs bluez-qt bluez-tools blueman bluedevil  #蓝牙</code></pre><hr><h2 id="4-一些刚需软件"><a href="#4-一些刚需软件" class="headerlink" title="4 一些刚需软件"></a>4 一些刚需软件</h2><pre><code class="Bash">sudo pacman -S fcitx5-im              #基础包组sudo pacman -S fcitx5-chinese-addons  #官方中文输入引擎sudo pacman -S fcitx5-material-color  #主题yay -S kitty python-pillow      #kitty 在wayland下支持ranger预览文件yay -S waybar     #baryay -S wofi       #wofi 作为一个程序检索和启动器yay -S ranger ttf-nerd-fonts-symbols-1000-em-mono highlight atool   #终端文件管理器yay -S swaylock   #锁屏yay -S kanshi     #屏幕yay -S wpaperd    #壁纸。 可自动切换同路径下随机壁纸yay -S mpvpaper   #视频壁纸yay -S thunar gvfs gvfs-mtp   #文件管理器yay -S thunar-archive-plugin file-rolleryay -S wl-clipboard  #剪贴板yay -S wlogout    #wlogout 可用来帐户登出，关机重启等操作yay -S grim slurp   #截图yay -S mako       #通知yay -S greetd greetd-tuigreet   #登录管理器</code></pre><hr><h2 id="5-其他软件"><a href="#5-其他软件" class="headerlink" title="5 其他软件"></a>5 其他软件</h2><pre><code class="Bash">yay -S v2raya-bin v2ray  #v2rayayay -S clash-premium-bin #clashyay -S --noconfirm zsh-theme-powerlevel10k  #zsh主题yay -S chromium google-chrome gtk4 icalingua++ #chrome QQsudo pacman -S aria2  #aria2服务sudo pacman -S mpv nomacs kate #视频播放 图片查看 文本编辑yay -S gamemode steam lutrisyay -S dxvk-bin vkd3d vkd3d-proton-bin  #dx9,10,11,12 to vulkanyay -S vbam-wx fceux melonds-bin citra-qt-bin ffmpeg4.4 yuzu-mainline-bin #GBA FC NDS 3DS SWITCH 模拟器yay -S mesen desmume-git #另可选FC和NDS模拟器 不推荐yay -S retroarch retroarch-assets-ozone retroarch-assets-xmb libretro-nestopia-git libretro-vba-next-git libretro-desmume-git #retroarch 包含很多常见游戏平台的模拟器sudo pacman -S virtualbox virtualbox-host-dkms virtualbox-guest-iso  #virtualboxyay -S virtualbox-ext-oracleyay -S obs-studio wlrobs-hg #OBSsudo pacman -S refind  #引导工具yay -S scrcpy        #投屏软件yay -S android-tools #adb工具yay -S genymotion    #安卓环境基于vbox,建议添加arm_translation以支持arm转换</code></pre><div class="admonition note"><p class="admonition-title">arm转译包</p><p><a href="https://github.com/m9rco/Genymotion_ARM_Translation">arm_translation</a></p></div><hr><h2 id="6-各软件的配置"><a href="#6-各软件的配置" class="headerlink" title="6 各软件的配置"></a>6 各软件的配置</h2><h3 id="6-1-设置环境变量"><a href="#6-1-设置环境变量" class="headerlink" title="6.1 设置环境变量"></a>6.1 设置环境变量</h3><div class="admonition todo"><p class="admonition-title">编辑environment</p><p>在 <code>/etc/environment</code> 加入以下内容</p><pre><code class="language-Bash">GTK_IM_MODULE=fcitxQT_IM_MODULE=fcitxXMODIFIERS=@im=fcitxSDL_IM_MODULE=fcitxINPUT_METHOD=fcitxGLFW_IM_MODULE=ibus</code></pre></div><h3 id="6-2-greetd配置"><a href="#6-2-greetd配置" class="headerlink" title="6.2 greetd配置"></a>6.2 greetd配置</h3><div class="admonition todo"><p class="admonition-title">编缉 `/etc/greetd/config.toml`</p><pre><code class="language-Bash">[default_session]command = "tuigreet --cmd wayfire"user = "$USER"</code></pre></div><h3 id="6-3-kitty配置"><a href="#6-3-kitty配置" class="headerlink" title="6.3 kitty配置"></a>6.3 kitty配置</h3><pre><code>```Bashcd ~/.config/kittyln -s ./kitty-themes/themes/Material.conf ~/.config/kitty/theme.conf```</code></pre><div class="admonition todo"><p class="admonition-title">在 `kitty.conf` 里添加内容</p><pre><code class="language-Bash">include ./theme.conf</code></pre></div><h3 id="6-4-ranger配置"><a href="#6-4-ranger配置" class="headerlink" title="6.4 ranger配置"></a>6.4 ranger配置</h3><pre><code class="Bash">git clone https://github.com/alexanderjeurissen/ranger_devicons ~/.config/ranger/plugins/ranger_deviconsecho "default_linemode devicons" &gt;&gt; $HOME/.config/ranger/rc.conf</code></pre><h3 id="6-5-wpaperd配置"><a href="#6-5-wpaperd配置" class="headerlink" title="6.5 wpaperd配置"></a>6.5 wpaperd配置</h3><div class="admonition todo"><p class="admonition-title">定时自动切换壁纸</p><p>wpaperd可以针对不同屏幕设置不同的壁纸以及不同定时的自动切换壁纸以下为2块屏幕的相同定时时读取同一路径下随机壁纸的例子</p><pre><code class="language-Bash">[eDP-1]path = "～/wallpaper/"apply-shadow = trueduration = "6m"[HDMI-A-1]path = "～/wallpaper/"apply-shadow = trueduration = "6m"</code></pre></div><h3 id="6-6-zsh主题-powerlevel10k"><a href="#6-6-zsh主题-powerlevel10k" class="headerlink" title="6.6 zsh主题-powerlevel10k"></a>6.6 zsh主题-powerlevel10k</h3><pre><code class="Bash">echo 'source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme' &gt;&gt; ~/.zshrc</code></pre><h3 id="6-7-vbox配置"><a href="#6-7-vbox配置" class="headerlink" title="6.7 vbox配置"></a>6.7 vbox配置</h3><pre><code class="Bash">sudo usermod -a -G vboxusers $USER</code></pre><h3 id="6-8-refind配置"><a href="#6-8-refind配置" class="headerlink" title="6.8 refind配置"></a>6.8 refind配置</h3><pre><code class="Bash">refind-install                     #安装refindsudo cp -r $theme /efi/EFI/refind/ #复制主题 推荐rEFInd-minimalsudo suecho 'include themes/rEFInd-minimal/theme.conf' &gt;&gt; /efi/EFI/refind/refind.conf #应用主题</code></pre><h3 id="6-9-aria2配置"><a href="#6-9-aria2配置" class="headerlink" title="6.9 aria2配置"></a>6.9 aria2配置</h3><div class="admonition todo"><p class="admonition-title">编辑 aria2.service</p><pre><code class="language-Bash">sudo vim /etc/systemd/user/aria2.service</code></pre><pre><code class="language-Bash">[Unit]Description=Aria2 Daemon<p>[Service]<br>ExecStart=/usr/bin/aria2c –conf-path=/home/$username/.config/aria2/aria2.config</p><p>[Install]<br>WantedBy=default.target</p></code><p><code class="language-Bash"></code></p></pre><p></p><pre><code class="language-Bash">touch ~/.config/aria2/aria2.sessionvim ~/.config/aria2/aria2.configsystemctl --user enable --now aria2 #非root服务自启</code></pre><blockquote><p>config可以在网上找一份，也可以改一改我的</p></blockquote></div><h3 id="6-10-V2raya"><a href="#6-10-V2raya" class="headerlink" title="6.10 V2raya"></a>6.10 V2raya</h3><pre><code class="Bash">yay -S v2raya-bin v2raysudo systemctl enable --now v2raya #服务自启Dashboard: 127.0.0.1:2017</code></pre><h3 id="6-11-Clash"><a href="#6-11-Clash" class="headerlink" title="6.11 Clash"></a>6.11 Clash</h3><pre><code class="Bash">yay -S clash_permium_binstart with `clash`如果country.mmdb下载失败, 手动复制再配置自己的配置文件cp $Country.mmdb /home/$username/.config/clash/cp $ur_config.yaml /home/$username/.config/clash/</code></pre><div class="admonition note"><p class="admonition-title">clash依赖</p><p><a href="https://github.com/SukkaW/Koolshare-Clash/blob/master/koolclash/koolclash/config/Country.mmdb">Country.mmdb</a></p></div><h4 id="6-11-1-Clash-TUN-及分流配置"><a href="#6-11-1-Clash-TUN-及分流配置" class="headerlink" title="6.11.1 Clash TUN 及分流配置"></a>6.11.1 Clash TUN 及分流配置</h4><div class="admonition todo"><p class="admonition-title">开启流量转发</p><pre><code class="language-Bash">sysctl -w net.ipv4.ip_forward=1</code></pre></div><div class="admonition todo"><p class="admonition-title">53端口可能被占用，先关掉默认系统DNS端口</p><pre><code class="language-Bash">systemctl disable systemd-resolved</code></pre></div><div class="admonition todo"><p class="admonition-title">配置config.yaml</p><p><a href="https://github.com/MoichiLin/dotfiles/blob/main/clash/config.yaml">dotfile</a></p></div><div class="admonition todo"><p class="admonition-title">编辑 clash.service</p><pre><code class="language-Bash">sudo vim /etc/systemd/user/clash.service</code></pre><pre><code class="language-Bash">[Unit]Description=Clash daemon, A rule-based proxy in Go.After=network.target<p>[Service]<br>Type=simple<br>Restart=always<br>ExecStart=/usr/bin/clash -d /home/$username/.config/clash</p></code><p><code class="language-Bash">[Install]<br>WantedBy=default.target<br></code></p></pre><p></p><pre><code class="language-Bash">systemctl --user enable --now clash #服务自启Dashboard: https://clash.razord.top/</code></pre></div><h3 id="6-12-yuzu配置"><a href="#6-12-yuzu配置" class="headerlink" title="6.12 yuzu配置"></a>6.12 yuzu配置</h3><div class="admonition todo"><p class="admonition-title">放置yuzu key</p><p>运行yuzu需要key把以下文件解压覆盖到<code>~/.local/share/yuzu/</code></p></div><div class="admonition note"><p class="admonition-title">key文件</p><p><a href="https://www.dropbox.com/s/zzmrx35emikqfn0/YUZU_KEY.rar?dl=0">YUZU_KEY</a></p></div><h3 id="6-13-Chromium-开启Google-Chrome同步"><a href="#6-13-Chromium-开启Google-Chrome同步" class="headerlink" title="6.13 Chromium 开启Google Chrome同步"></a>6.13 Chromium 开启Google Chrome同步</h3><div class="admonition error"><p class="admonition-title">其他文章</p><p><a href="https://nyac.at/posts/google-sync-in-chromium">外链</a></p></div><h3 id="6-14-Chrome-wayland-不建议"><a href="#6-14-Chrome-wayland-不建议" class="headerlink" title="6.14 Chrome wayland (不建议)"></a>6.14 Chrome wayland (不建议)</h3><div class="admonition info"><p class="admonition-title">让Chrome在wayland下运行</p><p>把 <code>--gtk-version=4</code> 添加到每一个Exec的未尾在chrome上打开chrome://flagsPreferred Ozone platform 换成 wayland以支持fcitx5在chrome在wayland下运行</p><pre><code class="language-Bash">sudo vim /usr/share/applications/google-chrome.desktop</code></pre></div><hr><h2 id="7-Waydroid-不推荐"><a href="#7-Waydroid-不推荐" class="headerlink" title="7 Waydroid (不推荐)"></a>7 Waydroid (不推荐)</h2><pre><code class="Bash">yay -S waydroid waydroid-image #waydroidsudo waydroid initsudo waydroid init -s GAPPS -fsystemctl start waydroid-container.servicewaydroid session startwaydroid show-full-uisudo mount --bind &lt;source&gt; ~/.local/share/waydroid/data/media/0/&lt;target&gt; #共享文件夹</code></pre><hr><h1 id="Awesome"><a href="#Awesome" class="headerlink" title="Awesome"></a>Awesome</h1><pre><code class="Bash">sudo pacman -S xorg-server xorg-xinit xtermyay -S awesome-git picom-git playerctl pamixer numlockxyay -S feh flameshot rofiecho "exec awesome" &gt; ~/.xinitrc</code></pre><div class="admonition error"><p class="admonition-title">error</p><p>启动时，需要在greetd里F2更改命令为<code>startx</code></p></div><div class="admonition todo"><p class="admonition-title">定时自动切换壁纸</p><p>先写一个sh让它开机时自动运行sh里就写上feh设置随机壁纸的循环<code>vim ~/wallpaper/readom.sh</code>6m自动切换一次</p><pre><code class="language-Bash">while true; dofeh --bg-fill --randomize --no-fehbg ~/wallpaper/*sleep 6mdone</code></pre></div>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wayfire </tag>
            
            <tag> awesome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arch Linux 基础安装</title>
      <link href="/2023/01/24/Arch_Linux_Install/"/>
      <url>/2023/01/24/Arch_Linux_Install/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="本文来源-ArchLinuxStudio"><a href="#本文来源-ArchLinuxStudio" class="headerlink" title="本文来源 ArchLinuxStudio"></a>本文来源 <a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/">ArchLinuxStudio</a></h1><h1 id="Arch-Linux-基础安装"><a href="#Arch-Linux-基础安装" class="headerlink" title="Arch Linux 基础安装"></a>Arch Linux 基础安装</h1><p>本节从安装最基础的无图形化 ArchLinux 系统开始。<a href="https://wiki.archlinux.org/index.php/Installation_guide">官方安装指南</a></p><h2 id="0-禁用-reflector"><a href="#0-禁用-reflector" class="headerlink" title="0.禁用 reflector"></a>0.禁用 reflector</h2><p>reflector 会为你选择速度合适的镜像源，但其结果并不准确，同时会清空配置文件中的内容，对于新人来讲并不适用，我们首先对其进行禁用。</p><pre><code class="Bash">systemctl stop reflector.service</code></pre><h2 id="1-再次确保是否为-UEFI-模式"><a href="#1-再次确保是否为-UEFI-模式" class="headerlink" title="1.再次确保是否为 UEFI 模式"></a>1.再次确保是否为 UEFI 模式</h2><pre><code class="Bash">ls /sys/firmware/efi/efivars</code></pre><h2 id="2-连接网络"><a href="#2-连接网络" class="headerlink" title="2.连接网络"></a>2.连接网络</h2><pre><code class="Bash">rfkill unblock wifi                       #解锁无线网卡iwctl                                     #执行iwctl命令，进入交互式命令行device list                               #列出设备名，比如无线网卡看到叫 wlan0station wlan0 scan                        #扫描网络station wlan0 get-networks                #列出网络 比如想连接YOUR-WIRELESS-NAME这个无线station wlan0 connect YOUR-WIRELESS-NAME  #进行连接 输入密码即可exit                                      #成功后exit退出</code></pre><h2 id="3-更新系统时钟"><a href="#3-更新系统时钟" class="headerlink" title="3.更新系统时钟"></a>3.更新系统时钟</h2><pre><code class="Bash">timedatectl set-ntp true    #将系统时间与网络时间进行同步timedatectl status          #检查服务状态</code></pre><h2 id="4-分区"><a href="#4-分区" class="headerlink" title="4.分区"></a>4.分区</h2><p>首先将磁盘转换为 gpt 类型</p><pre><code class="Bash">lsblk                       #显示分区情况 找到你想安装的磁盘名称parted /dev/nvme0n1         #执行parted，进入交互式命令行，进行磁盘类型变更(parted)mktable             #输入mktableNew disk label type? gpt    #输入gpt 将磁盘类型转换为gpt 如磁盘有数据会警告，输入yes即可quit                        #最后quit退出parted命令行交互</code></pre><p>使用 cfdisk 命令对磁盘分区</p><pre><code class="Bash">cfdisk /dev/sdx #来执行分区操作,分配各个分区大小，类型fdisk -l #分区结束后， 复查磁盘情况</code></pre><h2 id="5-格式化"><a href="#5-格式化" class="headerlink" title="5.格式化"></a>5.格式化</h2><pre><code class="Bash">mkfs.ext4  /dev/nvme0n1p2            #格式化根目录和home目录的两个分区mkfs.vfat  /dev/nvme0n1p1            #格式化efi分区</code></pre><h2 id="6-挂载"><a href="#6-挂载" class="headerlink" title="6.挂载"></a>6.挂载</h2><p>在挂载时，挂载是有顺序的，先挂载根分区，再挂载 EFI 分区</p><pre><code class="Bash">mount /dev/nvme0n1p2  /mntmkdir /mnt/efi     #创建efi目录mkdir /mnt/home    #创建home目录mount /dev/nvme0n1p1 /mnt/efimount /dev/sda1 /mnt/home</code></pre><h2 id="7-镜像源的选择"><a href="#7-镜像源的选择" class="headerlink" title="7.镜像源的选择"></a>7.镜像源的选择</h2><p>编辑镜像源，删除所有中国源，将台湾，日本，新加坡的提前</p><pre><code class="Bash">vim /etc/pacman.d/mirrorlist</code></pre><h2 id="8-安装系统"><a href="#8-安装系统" class="headerlink" title="8.安装系统"></a>8.安装系统</h2><pre><code class="Bash">pacstrap /mnt base base-devel linux-zen linux-zen-headers linux-firmware    #base-devel在AUR包的安装是必须的pacstrap /mnt dhcpcd iwd vim bash-completion zsh networkmanager                           #一个有线所需(iwd也需要dhcpcd) 一个无线所需 一个编辑器 一个补全工具</code></pre><h2 id="9-生成-fstab-文件"><a href="#9-生成-fstab-文件" class="headerlink" title="9.生成 fstab 文件"></a>9.生成 fstab 文件</h2><p>fstab 用来定义磁盘分区</p><pre><code class="Bash">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</code></pre><h2 id="10-change-root"><a href="#10-change-root" class="headerlink" title="10.change root"></a>10.change root</h2><pre><code class="Bash">arch-chroot /mnt</code></pre><h2 id="11-时区设置"><a href="#11-时区设置" class="headerlink" title="11.时区设置"></a>11.时区设置</h2><p>设置时区，在 /etc/localtime 下用/usr 中合适的时区创建符号连接。如下设置上海时区。</p><pre><code class="Bash">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code></pre><p>随后进行硬件时间设置，将当前的正确 UTC 时间写入硬件时间。</p><pre><code class="Bash">hwclock --systohc</code></pre><h2 id="12-设置-Locale-进行本地化"><a href="#12-设置-Locale-进行本地化" class="headerlink" title="12.设置 Locale 进行本地化"></a>12.设置 Locale 进行本地化</h2><pre><code class="Bash">vim /etc/locale.gen   #en_US.UTF-8 所在行以及 zh_CN.UTF-8 所在行的注释符号（#）locale-gen</code></pre><p>向 <code>/etc/locale.conf</code> 导入内容</p><pre><code class="Bash">echo 'LANG=en_US.UTF-8' &gt; /etc/locale.conf</code></pre><h2 id="13-设置主机名"><a href="#13-设置主机名" class="headerlink" title="13.设置主机名"></a>13.设置主机名</h2><pre><code class="Bash">vim /etc/hostname     #加入你想为主机取的主机名</code></pre><p>接下来在/etc/hosts设置与其匹配的条目。</p><pre><code class="Bash">vim /etc/hosts</code></pre><p>加入如下内容</p><pre><code class="Bash">127.0.0.1   localhost::1         localhost127.0.1.1   archname</code></pre><h2 id="14-为-root-用户设置密码"><a href="#14-为-root-用户设置密码" class="headerlink" title="14.为 root 用户设置密码"></a>14.为 root 用户设置密码</h2><pre><code class="Bash">passwd root</code></pre><h2 id="15-安装微码"><a href="#15-安装微码" class="headerlink" title="15.安装微码"></a>15.安装微码</h2><pre><code class="Bash">pacman -S intel-ucode   #Intelpacman -S amd-ucode     #AMD</code></pre><h2 id="16-安装引导程序"><a href="#16-安装引导程序" class="headerlink" title="16.安装引导程序"></a>16.安装引导程序</h2><pre><code class="Bash">pacman -S grub efibootmgr   #grub是启动引导器，efibootmgr被 grub 脚本用来将启动项写入 NVRAM。grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=GRUB</code></pre><p>接下来编辑/etc/default/grub 文件，去掉GRUB_CMDLINE_LINUX_DEFAULT一行中最后的 quiet 参数，同时把 log level 的数值从 3 改成 5。这样是为了后续如果出现系统错误，方便排错。同时在同一行加入 nowatchdog 参数，这可以显著提高开关机速度。</p><pre><code class="Bash">vim /etc/default/grub</code></pre><p>最后生成 GRUB 所需的配置文件</p><pre><code class="Bash">grub-mkconfig -o /boot/grub/grub.cfg</code></pre><h2 id="17-完成安装"><a href="#17-完成安装" class="headerlink" title="17.完成安装"></a>17.完成安装</h2><pre><code class="Bash">exit                # 退回安装环境#umount -R  /mnt     # 卸载新分区reboot              # 重启</code></pre><p>重启后，开启 dhcp 服务，即可连接网络</p><pre><code class="Bash">systemctl enable --now dhcpcd  #立即启动dhcp</code></pre><p>若为无线链接，则还需要启动 iwd 才可以使用 iwctl 连接网络</p><pre><code class="Bash">systemctl start iwd #立即启动iwdiwctl               #和之前的方式一样，连接无线网络</code></pre><h2 id="18-准备非-root-用户"><a href="#18-准备非-root-用户" class="headerlink" title="18.准备非 root 用户"></a>18.准备非 root 用户</h2><pre><code class="Bash">useradd -m -G wheel -s /bin/zsh testuser  #wheel附加组可sudo，以root用户执行命令 -m同时创建用户家目录</code></pre><p>设置新用户 testuser 的密码</p><pre><code class="Bash">passwd testuser</code></pre><p>编辑 sudoers 配置文件</p><pre><code class="Bash">EDITOR=vim visudo  # 需要以 root 用户运行 visudo 命令</code></pre><p>找到下面这样的一行，把前面的注释符号 # 去掉，:wq 保存并退出即可。</p><pre><code class="Bash">#%wheel ALL=(ALL) ALL</code></pre>]]></content>
      
      
      <categories>
          
          <category> tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> arch </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
